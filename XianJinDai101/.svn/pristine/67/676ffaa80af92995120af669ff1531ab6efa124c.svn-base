package com.ryx.ryxcredit.xjd;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.widget.TextView;

import com.ryx.ryxcredit.R;
import com.ryx.ryxcredit.RyxcreditConfig;
import com.ryx.ryxcredit.activity.BaseActivity;
import com.ryx.ryxcredit.beans.ReqAction;
import com.ryx.ryxcredit.beans.bussiness.activateline.CActivateLineSearchRequest;
import com.ryx.ryxcredit.beans.bussiness.activateline.CActivateLineSearchResponse;
import com.ryx.ryxcredit.beans.bussiness.supplementarymaterials.CModifyPersonMaterialsRequest;
import com.ryx.ryxcredit.beans.bussiness.supplementarymaterials.CSupplementaryMaterialsRequest;
import com.ryx.ryxcredit.beans.bussiness.supplementarymaterials.CSupplementaryMaterialsResponse;
import com.ryx.ryxcredit.beans.pojo.Customer;
import com.ryx.ryxcredit.newactivity.LeadingDotsSuccessViews;
import com.ryx.ryxcredit.newactivity.newinter.NewIBaseInfoFragmentCallback;
import com.ryx.ryxcredit.newfragment.baseinfo.BasePersonalInfoFragmentJHSuccessed;
import com.ryx.ryxcredit.newfragment.baseinfo.BaseWorkInfoFragmentJHSuccess;
import com.ryx.ryxcredit.newfragment.baseinfo.CallRecordsFragment;
import com.ryx.ryxcredit.newfragment.baseinfo.CenterBankCreditFragment;
import com.ryx.ryxcredit.newfragment.baseinfo.FaceCollectFragment;
import com.ryx.ryxcredit.services.ICallback;
import com.ryx.ryxcredit.utils.CLogUtil;

public class BaseInfoSuccesActivity extends BaseActivity implements NewIBaseInfoFragmentCallback {
    public static final int BASEINFO_RESULT_CODE = 0x1002;
    private TextView mMobileService;
    private String productId;//产品编码
    private String user_level = "";//客户级别

    public String getProvince() {
        return province;
    }

    public void setProvince(String province) {
        this.province = province;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getRegion() {
        return region;
    }

    public void setRegion(String region) {
        this.region = region;
    }

    private String province;
    private String city;
    private String region;
    public String getUser_info_level() {
        return user_info_level;
    }

    public void setUser_info_level(String user_info_level) {
        this.user_info_level = user_info_level;
    }

    private String user_info_level = "";//客户资料级别
    private String service_authorize_url;//协议

    public String getService_authorize_url() {
        return service_authorize_url;
    }

    public void setService_authorize_url(String service_authorize_url) {
        this.service_authorize_url = service_authorize_url;
    }

    public String getTrade_product_url() {
        return trade_product_url;
    }

    public void setTrade_product_url(String trade_product_url) {
        this.trade_product_url = trade_product_url;
    }

    private String trade_product_url;//协议
    Bundle args;

    private enum BaseInfoEnum {

        PERSON_INFO,
        WORK_INFO,
        APPLY_INFO,
        OTHER_INFO,
        CALLRECORDS_INFO,
        FACERECOGNITION_INFO,
        PEDSTRIANLETTER_INFO,
    }


    //新增对象
    private CSupplementaryMaterialsRequest cSupplementaryMaterialsRequest = null;
    //修改对象
    private CModifyPersonMaterialsRequest cModifyPersonMaterialsRequest = null;

    public static interface IPhoneListener {
        void phone(String phone);
    }

    private IPhoneListener iPhoneListener;
    //dot控制
    private LeadingDotsSuccessViews leadingDotsSuccessViews;

    public Customer customer = new Customer();
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.c_activity_base_infosuccess);
        setTitleLayout("工作信息", true, false);
        initData();
        Intent mIntent = new Intent();
        // 设置结果，并进行传送
        this.setResult(100, mIntent);
        if (getIntent().hasExtra("product_id")) {
            productId = getIntent().getStringExtra("product_id");
        }
        if (getIntent().hasExtra("user_level")) {
            user_level = getIntent().getStringExtra("user_level");
        }
        if (getIntent().hasExtra("user_info_level")) {
            user_info_level = getIntent().getStringExtra("user_info_level");
        }
        if (getIntent().hasExtra("trade_product_url")) {
            //瑞卡贷
            trade_product_url = getIntent().getStringExtra("trade_product_url");
        }
        if (getIntent().hasExtra("service_authorize_url")) {
            //瑞易贷
            service_authorize_url = getIntent().getStringExtra("service_authorize_url");
        }
        setbottomMenu();
        leadingDotsSuccessViews = (LeadingDotsSuccessViews) findViewById(R.id.ldv_content);
        if ("H".equals(user_info_level.trim())) {
            leadingDotsSuccessViews.setDotsNum(3);
        } else if ("A".equals(user_info_level.trim())) {
            leadingDotsSuccessViews.setDotsNum(4);
        } else if ("C".equals(user_info_level.trim())) {
            leadingDotsSuccessViews.setDotsNum(4);
        } else if ("D".equals(user_info_level.trim())) {
            leadingDotsSuccessViews.setDotsNum(5);
        }

    }

    //获取用户填写的基本信息
    private void initData() {
        CActivateLineSearchRequest request = new CActivateLineSearchRequest();
        request.setVersion(RyxcreditConfig.getVersion());
        httpsPost(this, request, ReqAction.APPLICATION_ACTIVATION_LIMIT, CActivateLineSearchResponse.class, new ICallback<CActivateLineSearchResponse>() {
            @Override
            public void success(final CActivateLineSearchResponse cActivateLineResponse) {
                customer = cActivateLineResponse.getResult().getCustomer();
                province = cActivateLineResponse.getResult().getProvince();
                city =cActivateLineResponse.getResult().getCity();
                region =cActivateLineResponse.getResult().getRegion();
                changeFragmentPosition(BaseInfoEnum.WORK_INFO);
            }


            @Override
            public void failture(String tips) {
                changeFragmentPosition(BaseInfoEnum.WORK_INFO);
            }
        });

    }

    @Override
    public void setbottomMenu() {
        super.setbottomMenu();
    }

    private FaceCollectFragment faceCollectFragment;
    private BasePersonalInfoFragmentJHSuccessed personfragment;

    /**
     * 切换fragment
     *
     * @param baseinfo
     */
    private void changeFragmentPosition(BaseInfoEnum baseinfo) {
        FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
        Fragment fragment = getSupportFragmentManager().findFragmentByTag(baseinfo.name());
        if (baseinfo == BaseInfoEnum.WORK_INFO) {
            if (fragment == null)
                fragment = new BaseWorkInfoFragmentJHSuccess();
            leadingDotsSuccessViews.change(0);
            setTitleLayout(getResources().getString(R.string.c_work_info), true, false);
        } else if (baseinfo == BaseInfoEnum.PERSON_INFO) {
            if (fragment == null) {
                personfragment = new BasePersonalInfoFragmentJHSuccessed();
                iPhoneListener = (IPhoneListener) personfragment;
                fragment = personfragment;
            }
            leadingDotsSuccessViews.change(1);
            setTitleLayout(getResources().getString(R.string.c_person_info), true, false);
        }
        //人行征信
        else if (baseinfo == BaseInfoEnum.PEDSTRIANLETTER_INFO) {
            if (fragment == null)
                fragment = new CenterBankCreditFragment();
            if ("A".equals(user_info_level.trim()) || "D".equals(user_info_level.trim())) {
                leadingDotsSuccessViews.change(2);
            }
            setTitleLayout(getResources().getString(R.string.c_pedestrianletter_info), true, false);
        } else if (baseinfo == BaseInfoEnum.CALLRECORDS_INFO) {
            if (fragment == null)
                fragment = new CallRecordsFragment();
            if ("C".equals(user_info_level.trim())) {
                leadingDotsSuccessViews.change(2);
            } else if ("D".equals(user_info_level.trim())) {
                leadingDotsSuccessViews.change(3);
            }
            setTitleLayout(getResources().getString(R.string.c_callRecords_info), true, false);

        } else if (baseinfo == BaseInfoEnum.FACERECOGNITION_INFO) {
            if (fragment == null) {
                faceCollectFragment = new FaceCollectFragment();
                fragment = faceCollectFragment;
            }
            //基本信息+运营商数据
            if ("C".equals(user_info_level.trim())) {
                leadingDotsSuccessViews.change(3);
            }//基本信息
            else if ("H".equals(user_info_level.trim())) {
                leadingDotsSuccessViews.change(2);
            }//基本信息+人行征信
            else if ("A".equals(user_info_level.trim())) {
                leadingDotsSuccessViews.change(3);
            }//基本信息+人行征信+运营商数据
            else if ("D".equals(user_info_level.trim())) {
                leadingDotsSuccessViews.change(4);
            }
            setTitleLayout(getResources().getString(R.string.c_facerecognition_info), true, false);
        }
        if (fragment != null) {
            //瑞易贷
            args = new Bundle();
            args.putSerializable("data", cSupplementaryMaterialsRequest);
            args.putSerializable("productId", productId);
            args.putSerializable("user_level", user_level);
            args.putString("xjd_url_address", trade_product_url);
            fragment.setArguments(args);
            fragmentTransaction.replace(R.id.c_fl_base_info, fragment, baseinfo.name());
            fragmentTransaction.addToBackStack(baseinfo.name());
            fragmentTransaction.commit();
        }
    }

    @Override
    public void setPersonInfo(Object personInfo) {
        changeFragmentPosition(BaseInfoEnum.PERSON_INFO);
    }

    public void setFaceCollectInfo() {
        changeFragmentPosition(BaseInfoEnum.FACERECOGNITION_INFO);
        submitSuppliementaryMaterials();
    }

    public void setWorkInfo(Object workInfo) {
        cSupplementaryMaterialsRequest = (CSupplementaryMaterialsRequest) workInfo;
        submitSuppliementaryMaterials();
    }

    public void setCallRecordInfo(Object callRecordInfo) {
        //cSupplementaryMaterialsRequest = (CSupplementaryMaterialsRequest) callRecordInfo;
        changeFragmentPosition(BaseInfoEnum.CALLRECORDS_INFO);
        submitSuppliementaryMaterials();
    }

    public void setCallRecordInfo() {
        changeFragmentPosition(BaseInfoEnum.CALLRECORDS_INFO);
        submitSuppliementaryMaterials();
    }

    public void setPedestrianLetter() {
        changeFragmentPosition(BaseInfoEnum.PEDSTRIANLETTER_INFO);
        submitSuppliementaryMaterials();
    }

/*    public void setFaceCollectInfo(Object faceCollectInfo) {
        changeFragmentPosition(BaseInfoEnum.FACERECOGNITION_INFO);
        submitSuppliementaryMaterials();
    }*/

    @Override
    public void setApplyInfo(Object applyInfo) {
        changeFragmentPosition(BaseInfoEnum.APPLY_INFO);
    }

    @Override
    public void setOtherInfo(Object otherInfo) {
        cSupplementaryMaterialsRequest = (CSupplementaryMaterialsRequest) otherInfo;
        changeFragmentPosition(BaseInfoEnum.PERSON_INFO);
    }

    /**
     * 提交个人资料
     */
    private void submitSuppliementaryMaterials() {
        RyxcreditConfig.context = this;
        addPersonMaterial(cSupplementaryMaterialsRequest);
    }

    @Override
    public void onBackPressed() {
        FragmentManager fragmentManager = getSupportFragmentManager();
        Fragment fragment_person = fragmentManager.findFragmentByTag(BaseInfoEnum.PERSON_INFO.name());
        Fragment fragment_work = fragmentManager.findFragmentByTag(BaseInfoEnum.WORK_INFO.name());
        Fragment fragment_face = fragmentManager.findFragmentByTag(BaseInfoEnum.FACERECOGNITION_INFO.name());
        Fragment fragment_contact = fragmentManager.findFragmentByTag(BaseInfoEnum.CALLRECORDS_INFO.name());
        Fragment fragment_pedstrianletter = fragmentManager.findFragmentByTag(BaseInfoEnum.PEDSTRIANLETTER_INFO.name());
        if (null != fragment_work && fragment_work.isVisible()) {
            finish();
            return;
        }
        if (null != fragment_person && fragment_person.isVisible()) {
            leadingDotsSuccessViews.change(0);
            setTitleLayout(getResources().getString(R.string.c_work_info), true, false);
            super.onBackPressed();
        }
        if(null != fragment_contact&& fragment_contact.isVisible()){
            switch (user_info_level.trim()){
                case "C":
                    leadingDotsSuccessViews.change(1);
                    setTitleLayout(getResources().getString(R.string.c_person_info), true, false);
                    break;
                case "D":
                    leadingDotsSuccessViews.change(2);
                    setTitleLayout(getResources().getString(R.string.c_pedestrianletter_info), true, false);
                    break;
            }
            super.onBackPressed();
        }
        if(null != fragment_pedstrianletter&& fragment_pedstrianletter.isVisible()){
            switch (user_info_level.trim()){
                case "A":
                    leadingDotsSuccessViews.change(1);
                    setTitleLayout(getResources().getString(R.string.c_person_info), true, false);
                    break;
                case "D":
                    leadingDotsSuccessViews.change(1);
                    setTitleLayout(getResources().getString(R.string.c_person_info), true, false);
                    break;
            }
            super.onBackPressed();
        }

        if (null != fragment_face && fragment_face.isVisible()) {
            switch (user_info_level.trim()){
                case "H":
                    leadingDotsSuccessViews.change(1);
                    setTitleLayout(getResources().getString(R.string.c_person_info), true, false);
                    break;
                case "A":
                    leadingDotsSuccessViews.change(2);
                    setTitleLayout(getResources().getString(R.string.c_pedestrianletter_info), true, false);
                    break;
                case "D":
                    leadingDotsSuccessViews.change(3);
                    setTitleLayout(getResources().getString(R.string.c_callRecords_info), true, false);
                    break;
                case "C":
                    leadingDotsSuccessViews.change(2);
                    setTitleLayout(getResources().getString(R.string.c_callRecords_info), true, false);
                    break;
            }
            super.onBackPressed();
        }
    }

    /**
     * 上传个人资料
     *
     * @param req
     */
    private void addPersonMaterial(CSupplementaryMaterialsRequest req) {
        httpsPost(this, req, ReqAction.APPLICATION_CREATE_OR_MODIFY_CUSTOMER, CSupplementaryMaterialsResponse.class, new ICallback<CSupplementaryMaterialsResponse>() {
            @Override
            public void success(CSupplementaryMaterialsResponse response) {
                customer.setContact_name(cSupplementaryMaterialsRequest.getContact_name());
                customer.setContact_phone_num(cSupplementaryMaterialsRequest.getCompany_phone_num());
                customer.setContact_relation(cSupplementaryMaterialsRequest.getContact_relation());
                customer.setMarital_status(cSupplementaryMaterialsRequest.getMarital_status());
                customer.setEducation_status(cSupplementaryMaterialsRequest.getEducation_status());
                customer.setCompany_address(cSupplementaryMaterialsRequest.getCompany_address());
                customer.setCompany_name(cSupplementaryMaterialsRequest.getCompany_name());
                customer.setCompany_phone_num(cSupplementaryMaterialsRequest.getCompany_phone_num());
                customer.setIndustry_type(cSupplementaryMaterialsRequest.getIndustry_type());
                customer.setMonthly_income(cSupplementaryMaterialsRequest.getMonthly_income());
                //不需要采集电商信息
               /* if ("H".equals(user_info_level.trim())) {
                    changeFragmentPosition(BaseInfoEnum.FACERECOGNITION_INFO);
                }
                //需要采集电商信息
                else if ("C".equals(user_info_level.trim())) {
                    changeFragmentPosition(BaseInfoEnum.CALLRECORDS_INFO);
                }*/

            }

            @Override
            public void failture(String tips) {
                CLogUtil.showToast(BaseInfoSuccesActivity.this, tips);
                changeFragmentPosition(BaseInfoEnum.CALLRECORDS_INFO);
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        FragmentManager fragmentManager = getSupportFragmentManager();
        Fragment fragment_face = fragmentManager.findFragmentByTag(BaseInfoEnum.FACERECOGNITION_INFO.name());
        Fragment fragment_person = fragmentManager.findFragmentByTag(BaseInfoEnum.PERSON_INFO.name());
        if (fragment_face != null && fragment_face.isVisible()) {
            faceCollectFragment.onActivityResult(requestCode, resultCode, data);
        } else if (null != fragment_person && fragment_person.isVisible()) {
            personfragment.onActivityResult(requestCode, resultCode, data);
        }
    }

}

