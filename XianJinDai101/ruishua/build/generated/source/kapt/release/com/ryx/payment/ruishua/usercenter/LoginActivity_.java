//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.3.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.ryx.payment.ruishua.usercenter;

import android.app.Activity;
import android.content.Context;
import android.os.Build.VERSION;
import android.os.Build.VERSION_CODES;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import com.ryx.payment.ruishua.R;
import com.ryx.payment.ruishua.adapter.AppLisDialogAdapter_;
import com.zhy.autolayout.AutoLinearLayout;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.builder.PostActivityStarter;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class LoginActivity_
    extends LoginActivity
    implements HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(R.layout.activity_login);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        this.applistAapter = AppLisDialogAdapter_.getInstance_(this);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static LoginActivity_.IntentBuilder_ intent(Context context) {
        return new LoginActivity_.IntentBuilder_(context);
    }

    public static LoginActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new LoginActivity_.IntentBuilder_(fragment);
    }

    public static LoginActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new LoginActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.btnLogin = ((Button) hasViews.findViewById(R.id.btn_login));
        this.tv_register = ((TextView) hasViews.findViewById(R.id.tv_register));
        this.iv_show_pwd = ((ImageView) hasViews.findViewById(R.id.iv_show_pwd));
        this.edt_pwd = ((EditText) hasViews.findViewById(R.id.edt_pwd));
        this.edt_accout = ((EditText) hasViews.findViewById(R.id.edt_accout));
        this.lv_account = ((ListView) hasViews.findViewById(R.id.lv_account));
        this.lay_list = ((AutoLinearLayout) hasViews.findViewById(R.id.lay_list));
        this.btn_pop_list = ((ImageView) hasViews.findViewById(R.id.btn_pop_list));
        this.layoutUsername = ((LinearLayout) hasViews.findViewById(R.id.layout_username));
        this.iv_logo = ((ImageView) hasViews.findViewById(R.id.iv_logo));
        this.layoutPwd = ((LinearLayout) hasViews.findViewById(R.id.layout_pwd));
        this.layoutPwdState = ((LinearLayout) hasViews.findViewById(R.id.layout_pwd_state));
        View view_tv_resetPwd = hasViews.findViewById(R.id.tv_resetPwd);
        View view_btn_close = hasViews.findViewById(R.id.btn_close);

        if (this.layoutPwd!= null) {
            this.layoutPwd.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.setLayoutPwd();
                }
            }
            );
        }
        if (this.iv_show_pwd!= null) {
            this.iv_show_pwd.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.setLayoutPwd();
                }
            }
            );
        }
        if (view_tv_resetPwd!= null) {
            view_tv_resetPwd.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.resetPwd();
                }
            }
            );
        }
        if (this.btnLogin!= null) {
            this.btnLogin.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.setBtnLogin();
                }
            }
            );
        }
        if (view_btn_close!= null) {
            view_btn_close.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.closePage();
                }
            }
            );
        }
        if (this.btn_pop_list!= null) {
            this.btn_pop_list.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.popAccountList();
                }
            }
            );
        }
        if (this.tv_register!= null) {
            this.tv_register.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.setBtnRegister();
                }
            }
            );
        }
        if (this.edt_pwd!= null) {
            this.edt_pwd.setOnFocusChangeListener(new OnFocusChangeListener() {

                @Override
                public void onFocusChange(View view, boolean hasFocus) {
                    LoginActivity_.this.focusChange(view, hasFocus);
                }
            }
            );
        }
        if (this.edt_accout!= null) {
            this.edt_accout.setOnFocusChangeListener(new OnFocusChangeListener() {

                @Override
                public void onFocusChange(View view, boolean hasFocus) {
                    LoginActivity_.this.focusChange(view, hasFocus);
                }
            }
            );
        }
        if (this.lv_account!= null) {
            ((AdapterView<?> ) this.lv_account).setOnItemClickListener(new OnItemClickListener() {

                @Override
                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                    LoginActivity_.this.setAccount(position);
                }
            }
            );
        }
        this.ivShowPwd = this.iv_show_pwd;
        iniViews();
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<LoginActivity_.IntentBuilder_>
    {
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, LoginActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), LoginActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), LoginActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public PostActivityStarter startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                        fragment_.startActivityForResult(intent, requestCode, lastOptions);
                    } else {
                        fragment_.startActivityForResult(intent, requestCode);
                    }
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                            context.startActivity(intent, lastOptions);
                        } else {
                            context.startActivity(intent);
                        }
                    }
                }
            }
            return new PostActivityStarter(context);
        }
    }
}
